volumes:
    langgraph-data:
        driver: local
services:
    langgraph-redis:
        image: redis:6
        healthcheck:
            test: redis-cli ping
            interval: 5s
            timeout: 1s
            retries: 5
    langgraph-postgres:
        image: ankane/pgvector:latest
        ports:
            - "5433:5432"
        environment:
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        volumes:
            - ./data/pgvector:/var/lib/postgresql/data
        healthcheck:
            test: pg_isready -U postgres
            start_period: 10s
            timeout: 1s
            retries: 5
            interval: 5s
    langgraph-api:
        image: ${IMAGE_NAME}
        ports:
            - "8123:8000"
        depends_on:
            langgraph-redis:
                condition: service_healthy
            langgraph-postgres:
                condition: service_healthy
        env_file:
            - .env
        environment:
            REDIS_URI: redis://langgraph-redis:6379
            LANGSMITH_API_KEY: ${LANGSMITH_API_KEY}
            POSTGRES_URI: postgres://postgres:postgres@langgraph-postgres:5432/postgres?sslmode=disable

    langgraph-frontend:
        build: .
        container_name: langgraph-frontend
        ports:
            - "8000:8000"
        depends_on:
            langgraph-postgres:
                condition: service_healthy
            langgraph-api:
                condition: service_started
            langgraph-redis:
                condition: service_healthy
        env_file:
            - .env
        environment:
            POSTGRES_HOST: langgraph-postgres
            POSTGRES_PORT: 5432
            AGENT_URL: http://langgraph-api:8000
            # Add any other required env vars for Django/frontend here
        restart: unless-stopped
